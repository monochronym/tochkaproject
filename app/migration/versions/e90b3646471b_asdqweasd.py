"""asdqweasd

Revision ID: e90b3646471b
Revises: 
Create Date: 2025-06-13 03:42:07.203596

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e90b3646471b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tickers',
    sa.Column('ticker', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('user_role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key')
    )
    op.create_table('balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.ticker'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instruments',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.ticker'], ),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('limitorders',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'EXECUTED', 'PARTIALLY_EXECUTED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('filled', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marketorders',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'EXECUTED', 'PARTIALLY_EXECUTED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.ticker'], ),
    sa.PrimaryKeyConstraint('timestamp')
    )
    op.create_table('limitorderbodys',
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('direction', sa.Enum('BUY', 'SELL', name='direction'), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['limitorders.id'], ),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.ticker'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('marketorderbodys',
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('direction', sa.Enum('BUY', 'SELL', name='direction'), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['marketorders.id'], ),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.ticker'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('marketorderbodys')
    op.drop_table('limitorderbodys')
    op.drop_table('transactions')
    op.drop_table('marketorders')
    op.drop_table('limitorders')
    op.drop_table('instruments')
    op.drop_table('balances')
    op.drop_table('users')
    op.drop_table('tickers')
    # ### end Alembic commands ###
